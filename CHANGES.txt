Changes
=======

0.6dev
------
* Project renamed to "soapfish"
  It looks like this will be a permanent fork and with a different name we
  can publish packages on pypi. As a part of the project renaming I changed
  all references to "soapbox" (including class and package names) from
  "soapbox" to "soapfish" causing a big API break for all existing users. Also
  SoapboxRequest and SoapboxResponse were renamed to SOAPRequest/SOAPResponse
  so they blend in better with the overall naming convention.
* This release fixes a potential SECURITY ISSUE (pattern restrictions were not
  applied correctly).
* schema validation now also uses imported schemas correctly.
* fixes for wsdl2py and xsd2py when using Python 3
* restored ability to validate parsed XML using a soapfish schema in ComplexType
* support choice indicator in ComplexTypes (#39)
  This fixes validation of matching XML documents (previously soapfish always
  assumed sequences) as well as code generation from WSDL/XSD
  patch contributed by Martin Mrose, tests written by Felix Schwarz
* add support for xsd.date (date range currently limited by datetime.date)
* add support relative schema paths (#49)
* add support to string restrictions length, minLength, maxLength, whiteSpace (#67)
* xsd.Decimal field accept Python Decimal (#52)
* implement service.route function to avoid changes to generated code (#68)
* Flask dispatcher (#53)
* Bug fixes:
  - fix exception in SOAPDispatcher when a handler does not return a SOAPResponse
  - correctly apply pattern restrictions for simple types
  - pattern restriction was not correctly serialized when generating xsd schemas
  - omit minOccurs=1 and maxOccurs=1 in xsd2py: these are the defaults and the
    latter even produces invalid code (because xsd.Element does not support
    the maxOccurs attribute)
  - fix bad WSDL generation due to unresolved type reference


0.5.1 (2014-06-12)
------------------
* downgrade log level on soap action discovery


0.5.0 (2014-06-12)
------------------
* Make elements inherit from schema namespace
* better logging in soap/stub
* soap12: Quotes around action in http header


0.4.0 (2014-05-06)
------------------
* "soapbox" project forked by Felix Schwarz as "soapbox-bsd" due to
  licensing incompatibilities (Flight Data Services insists on using the
  GPL-incompatible OSL). This fork is based on the last soapbox commit
  still using the original 3-clause BSD license (7d3516fe).
  Later on the fork received significant contributions from Thomas Recouvreux
  and Xavier Fernandez (Polyconseil).
* added framework-agnostic SOAP dispatcher so soapbox-bsd is not tied to Django
  anymore but can be used with virtually any web framework (including Flask,
  Pyramid, pure WSGI)
* support for SOAP 1.2 and WSDL 1.2
* support for WS-Addressing
* Code is now compatible with Python 3
* support for Django >= 1.4
* fault actor support (Damian PowÄ…zka)
* many bug fixes for code generation and XML rendering
* preserve elementFormDefault attribute in Schema
* ability to use custom SOAP headers
* middleware stack to hook into SOAP request processing
* better handling of invalid SOAP requests (e.g. missing SOAP bodies, invalid
  SOAP actions)
* very likely even more fixes which I forgot to mention here ...


0.3.2
-----

* Initial support for variable URL scheme and host
* Test suite executes

0.3.1
-----

* SSL certificate verification

0.3.0
-----

- **Features**:
  - Add option to disable schema validation on parsing:
    - Set ``xsd.VALIDATE_ON_PARSE`` to ``False``.
  - Added some initial logging support:
    - Request logging available at when level set to DEBUG.
- **Bug Fixes**:
  - Allow unicode as a valid type for strings.
  - Check for Python keywords and prefix with underscore.
- **Miscellaneous**:
  - Python code templates now loaded from external files.
  - Generated code is now much cleaner.
  - Generated code is now timestamped.
  - Code tidying as reported by pyflakes and pep8.
  - Fixed a number of typographical errors.
  - Various name improvements to functions.
  - Updated .hgignore
- **Known Issues**:
  - Generated schema classes can be circular referencing.

